name: Main

on:
  push:
    branches:
      - main

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  IMAGE_TAR_FILENAME: /tmp/${{ github.event.repository.name }}:${{ github.sha }}.tar


jobs:
  setup:
    runs-on: ubuntu-latest
    needs: []
    outputs:
      image_name: ${{ steps.vars.outputs.image_name }}
    steps:
      - name: Prepare outputs for workflow jobs
        id: vars
        run:
          echo "image_name=cyberdojo/sinatra-base:${GITHUB_SHA:0:7}" >> ${GITHUB_OUTPUT}


  build-image:
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      IMAGE_NAME: ${{ needs.setup.outputs.image_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build Docker image
        run:
          make image_server

      - name: Tar Docker image
        run:
          docker image save ${{ env.IMAGE_NAME }} --output ${{ env.IMAGE_TAR_FILENAME }}

      - name: Cache Docker image
        uses: actions/cache@v4
        with:
          path: ${{ env.IMAGE_TAR_FILENAME }}
          key: ${{ env.IMAGE_NAME }}


  snyk-container-scan:
    runs-on: ubuntu-latest
    needs: [setup, build-image]
    env:
      SARIF_FILENAME: snyk.container.scan.json
      IMAGE_NAME: ${{ needs.setup.outputs.image_name }}
    steps:
      - name: Retrieve Docker image from cache
        uses: actions/cache@v4
        with:
          path: ${{ env.IMAGE_TAR_FILENAME }}
          key: ${{ env.IMAGE_NAME }}

      - name: Load Docker image
        run:
          docker image load --input ${{ env.IMAGE_TAR_FILENAME }}

      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Snyk container scan
        run:
          make snyk-container-scan


  push-image:
    runs-on: ubuntu-latest
    needs: [setup, snyk-container-scan]
    env:
      IMAGE_NAME: ${{ needs.setup.outputs.image_name }}
    steps:
      - name: Retrieve Docker image from cache
        uses: actions/cache@v4
        with:
          path: ${{ env.IMAGE_TAR_FILENAME }}
          key: ${{ env.IMAGE_NAME }}

      - name: Load Docker image
        run:
          docker image load --input ${{ env.IMAGE_TAR_FILENAME }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Snyk container scan
        run:
          make image_push


  notify-dependents:
    runs-on: ubuntu-latest
    needs: [setup, push-image]
    uses: cyber-dojo/saver/.github/workflows/main.yml@v1
    with:
      BASE_IMAGE: ${{ needs.setup.outputs.image_name }}
    secrets:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
