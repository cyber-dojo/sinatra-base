name: Main

on:
  push:
    branches:
      - main

env:
  IMAGE_TAR_FILENAME: /tmp/${{ github.event.repository.name }}:${{ github.sha }}.tar
  DOCKER_API_VERSION: ${{ vars.DOCKER_API_VERSION }}

jobs:
  setup:
    runs-on: ubuntu-latest
    needs: []
    outputs:
      image_tag:  ${{ steps.vars.outputs.image_tag }}
      image_name: ${{ steps.vars.outputs.image_name }}
    steps:
      - name: Prepare outputs for workflow jobs
        id: vars
        run: |
          TAG="${GITHUB_SHA:0:7}"
          echo "image_tag=${TAG}"                         >> ${GITHUB_OUTPUT}          
          echo "image_name=cyberdojo/sinatra-base:${TAG}" >> ${GITHUB_OUTPUT}


  build-image:
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      IMAGE_NAME: ${{ needs.setup.outputs.image_name }}
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build Docker image
        run:
          make image

      - name: Tar Docker image
        run:
          docker image save "${IMAGE_NAME}" --output "${IMAGE_TAR_FILENAME}"

      - name: Cache Docker image
        uses: actions/cache@v4
        with:
          path: ${{ env.IMAGE_TAR_FILENAME }}
          key:  ${{ env.IMAGE_NAME }}


  snyk-container-scan:
    runs-on: ubuntu-latest
    needs: [setup, build-image]
    env:
      SARIF_FILENAME: snyk.container.scan.json
      SNYK_TOKEN:     ${{ secrets.SNYK_TOKEN }}
      IMAGE_NAME:     ${{ needs.setup.outputs.image_name }}
    steps:
      - name: Retrieve Docker image from cache
        uses: actions/cache@v4
        with:
          path: ${{ env.IMAGE_TAR_FILENAME }}
          key:  ${{ env.IMAGE_NAME }}

      - name: Load Docker image
        run:
          docker image load --input "${IMAGE_TAR_FILENAME}"

      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Snyk container scan
        run:
          make snyk-container-scan


  push-image:
    runs-on: ubuntu-latest
    needs: [setup, snyk-container-scan]
    env:
      IMAGE_NAME: ${{ needs.setup.outputs.image_name }}
    outputs:
      digest: ${{ steps.variables.outputs.digest }}
    steps:
      - name: Retrieve Docker image from cache
        uses: actions/cache@v4
        with:
          path: ${{ env.IMAGE_TAR_FILENAME }}
          key:  ${{ env.IMAGE_NAME }}

      - name: Load Docker image
        run:
          docker image load --input "${IMAGE_TAR_FILENAME}"

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Push docker image to DockerHub
        run:
          docker push "${IMAGE_NAME}"

      - name: Setup Kosli CLI
        uses: kosli-dev/setup-cli-action@v2
        with:
          version: ${{ vars.KOSLI_CLI_VERSION }}

      - name: Make artifact digest available to following jobs
        id: variables
        run: |
          DIGEST=$(kosli fingerprint "${IMAGE_NAME}" --artifact-type=oci)        
          echo "digest=${DIGEST}" >> ${GITHUB_OUTPUT}      


  run-downstream-workflows:
    runs-on: ubuntu-latest
    needs: [setup, push-image]
    strategy:
      matrix:
        repo: [ 'cyber-dojo/dashboard', 'cyber-dojo/saver' ]
    steps:
      - name: Run workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.TRIGGER_DOWNSTREAM_WORKFLOWS }}
          repository: ${{ matrix.repo }}
          event-type: base-image-update
          client-payload: '{"name": "cyberdojo/sinatra-base", "tag": "${{ needs.setup.outputs.image_tag }}", "digest": "${{ needs.push-image.outputs.digest }}"}'
